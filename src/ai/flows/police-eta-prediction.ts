// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview Predicts the ETA of a police vehicle dispatched to pick up a person in distress.
 *
 * - policeETAPrediction - A function that predicts the ETA of a police vehicle.
 * - PoliceETAPredictionInput - The input type for the policeETAPrediction function.
 * - PoliceETAPredictionOutput - The return type for the policeETAPrediction function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const PoliceETAPredictionInputSchema = z.object({
  userLocation: z
    .string()
    .describe('The current location of the user in distress (latitude, longitude).'),
  destination: z.string().describe('The destination where the user wants to go.'),
  policeStationLocation: z
    .string()
    .describe('The location of the police station dispatching the vehicle (latitude, longitude).'),
  vehicleAvailability: z
    .string()
    .describe('The current availability status of police vehicles at the station.'),
  trafficConditions: z.string().describe('Real-time traffic conditions along the route.'),
  policeOfficerName: z.string().describe('Name of the police officer dispatched.'),
  policeVehicleNumber: z.string().describe('The vehicle number of the dispatched vehicle.'),
});

export type PoliceETAPredictionInput = z.infer<typeof PoliceETAPredictionInputSchema>;

const PoliceETAPredictionOutputSchema = z.object({
  estimatedArrivalTime: z
    .string()
    .describe('The estimated time of arrival of the police vehicle at the user location.'),
  reroutingInformation: z
    .string()
    .describe('Any rerouting information due to traffic or vehicle availability.'),
  policeOfficerDetails: z.string().describe('Details of the police officer assigned.'),
  policeVehicleDetails: z.string().describe('Details of the police vehicle assigned.'),
});

export type PoliceETAPredictionOutput = z.infer<typeof PoliceETAPredictionOutputSchema>;

export async function policeETAPrediction(input: PoliceETAPredictionInput): Promise<PoliceETAPredictionOutput> {
  return policeETAPredictionFlow(input);
}

const prompt = ai.definePrompt({
  name: 'policeETAPredictionPrompt',
  input: {schema: PoliceETAPredictionInputSchema},
  output: {schema: PoliceETAPredictionOutputSchema},
  prompt: `You are an AI assistant that provides estimated time of arrival (ETA) predictions for police vehicles dispatched to pick up individuals in distress.

  Given the following information, predict the estimated time of arrival, any rerouting information, and details of the police officer and vehicle.

  User Location: {{{userLocation}}}
  Destination: {{{destination}}}
  Police Station Location: {{{policeStationLocation}}}
  Vehicle Availability: {{{vehicleAvailability}}}
  Traffic Conditions: {{{trafficConditions}}}
  Police Officer Name: {{{policeOfficerName}}}
  Police Vehicle Number: {{{policeVehicleNumber}}}

  Provide the estimated time of arrival, rerouting information, police officer details, and police vehicle details in a clear and concise manner.
  Ensure the information is accurate and up-to-date, considering real-time traffic and vehicle availability.

  Estimated Arrival Time:
  Rerouting Information:
  Police Officer Details:
  Police Vehicle Details:`,
});

const policeETAPredictionFlow = ai.defineFlow(
  {
    name: 'policeETAPredictionFlow',
    inputSchema: PoliceETAPredictionInputSchema,
    outputSchema: PoliceETAPredictionOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
